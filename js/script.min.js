Array.prototype.inArray=function t(e){for(var r=0;r<this.length;r++){if(this[r]===e){return true}}return false};if(Array.prototype.equals)console.warn("Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.");Array.prototype.equals=function(t){if(!t)return false;if(this.length!=t.length)return false;for(var e=0,r=this.length;e<r;e++){if(this[e]instanceof Array&&t[e]instanceof Array){if(!this[e].equals(t[e]))return false}else if(this[e]!=t[e]){return false}}return true};if(Array.prototype.contains)console.warn("Overriding existing Array.prototype.contains. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code.");Array.prototype.contains=function(t){if(!this)return false;var e=false;for(var r=0,s=this.length;r<s;r++){if(this[r]instanceof Array){if(this[r].equals(t))e=true}else if(this[r]===t)e=true}return e};Array.prototype.indexOf=function(t){if(!this)return-1;var e=-1;for(var r=0,s=this.length;r<s;r++){if(this[r]instanceof Array)if(this[r].equals(t))e=r;else if(this[r]===t)e=r}return e};"use strict";var game={boardMap:[],bombsMap:[],boardSpan:8,board:null,bombs:8,flagMode:false,get score(){return Math.pow(this.boardSpan,2)-this.bombs},start:function(){this.setHandlers();this.board=document.getElementById("board");this.buildBoard();this.spreadBombs();this.spreadNums()},restart:function(){for(var t=0;t<objects.length;t++){objects[t].clean()}game.spreadBombs();game.spreadNums()},setHandlers:function(){document.getElementById("reloadBtn").addEventListener("click",this.restart);document.getElementById("toggleFlagModeBtn").addEventListener("click",this.toggleFlagMode)},buildBoard:function(){for(var t=0;t<this.boardSpan;t++){var e=[],r=document.createElement("div");r.className="btn-group btn-block";for(var s=0;s<this.boardSpan;s++){var a=new Tile(s,t);e.push(a);r.appendChild(a.btn)}this.boardMap[t]=e;this.board.appendChild(r)}},spreadBombs:function(){this.bombsMap=[];var t,e;for(var r=0;r<this.bombs;r++){t=Math.round(Math.random()*(this.boardSpan-1));e=Math.round(Math.random()*(this.boardSpan-1));if(!this.boardMap[e][t].bomb){this.bombsMap.push([t,e]);this.boardMap[e][t].setBomb()}else r--}},spreadNums:function(){for(var t=0;t<this.bombsMap.length;t++){var e=this.bombsMap[t][0];var r=this.bombsMap[t][1];var s=this.getNeighbors(e,r);for(var a=0;a<s.length;a++){var i=s[a][0];var n=s[a][1];if(!this.boardMap[n][i].bomb){this.boardMap[n][i].addDanger()}}}},getNeighbors:function(t,e){var r=[[-1,-1],[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0]];var s=[];for(var a=0;a<r.length;a++){var i=t+r[a][0];var n=e+r[a][1];if(n<this.boardSpan&&n>-1&&i<this.boardSpan&&i>-1){s.push([i,n])}}return s},revealNeighbors:function(t,e){var r=[[t,e]];var s=r.slice();while(r.length>0){var a=this.getNeighbors(r[0][0],r[0][1]);for(var i=0;i<a.length;i++){var n=game.boardMap[a[i][1]][a[i][0]];if(!s.contains(a[i])){if(!n.flag&&!n.revealed){if(n.danger===0){console.log("render");s.push(a[i]);r.push(a[i])}else{s.push(a[i])}}}}r.shift()}for(var i=0;i<s.length;i++){var o=s[i][0];var l=s[i][1];this.boardMap[l][o].render()}},toggleFlagMode:function(){this.classList.toggle("btn-flag-active");game.flagMode=!game.flagMode}};var objects=[];function Tile(t,e){this.x=t;this.y=e;this.danger=0;this.bomb=false;this.flag=false;this.revealed=false;var r=document.createElement("button");r.className="btn btn-tile";r.innerHTML="+";r.addEventListener("click",this,false);this.btn=r;objects.push(this)}Tile.prototype.handleEvent=function(t){switch(t.type){case"click":this.click(t)}};Tile.prototype.click=function(t){if(!this.revealed){if(!game.flagMode){if(!this.bomb){if(!this.danger>0){this.render();game.revealNeighbors(this.x,this.y)}else{this.render()}}else{this.render()}}else{this.toggleFlag()}}};Tile.prototype.setBomb=function(){this.bomb=true;this.btn.className="btn btn-danger";this.btn.innerHTML="X"};Tile.prototype.addDanger=function(){this.danger++;this.btn.innerHTML=this.danger};Tile.prototype.toggleFlag=function(){this.flag=!this.flag;this.btn.classList.toggle("btn-primary");this.btn.classList.toggle("btn-flag-active");console.log("Flag: "+this.flag)};Tile.prototype.render=function(){this.revealed=true;if(this.bomb){this.btn.className="btn btn-danger";this.btn.innerHTML="X"}else{this.btn.className="btn btn-success";this.btn.innerHTML=this.danger}};Tile.prototype.clean=function(){this.danger=0;this.bomb=false;this.flag=false;this.btn.className="btn btn-tile";this.btn.innerHTML="+"};$(document).ready(function(){game.start()});